define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/google_nav_bar/src/button.dart', 'packages/flutter/src/services/haptic_feedback.dart'], (function load__packages__google_nav_bar__src__gbutton_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__google_nav_bar__src__button$46dart, packages__flutter__src__services__haptic_feedback$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const button = packages__google_nav_bar__src__button$46dart.src__button;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  var gbutton = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 18,
        [_Location_line]: 99,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 98,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gbutton.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 9,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "border",
        [_Location_column]: 9,
        [_Location_line]: 75,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "activeBorder",
        [_Location_column]: 9,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadow",
        [_Location_column]: 9,
        [_Location_line]: 77,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debug",
        [_Location_column]: 9,
        [_Location_line]: 78,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 79,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconSize",
        [_Location_column]: 9,
        [_Location_line]: 80,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "active",
        [_Location_column]: 9,
        [_Location_line]: 81,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 9,
        [_Location_line]: 82,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gap",
        [_Location_column]: 9,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rippleColor",
        [_Location_column]: 9,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 9,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gradient",
        [_Location_column]: 9,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 9,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leading",
        [_Location_column]: 9,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconActiveColor",
        [_Location_column]: 9,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconColor",
        [_Location_column]: 9,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 9,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 9,
        [_Location_line]: 98,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27], T._LocationL());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 73,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gbutton.dart"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 7,
        [_Location_line]: 72,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.constList([C[30] || CT.C30, C[31] || CT.C31], T._LocationL());
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[29] || CT.C29,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 71,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gbutton.dart"
      });
    }
  }, false);
  var C = Array(32).fill(void 0);
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gbutton.dart",
    "package:google_nav_bar/src/gbutton.dart"
  ];
  var active$ = dart.privateName(gbutton, "GButton.active");
  var debug$ = dart.privateName(gbutton, "GButton.debug");
  var haptic$ = dart.privateName(gbutton, "GButton.haptic");
  var gap$ = dart.privateName(gbutton, "GButton.gap");
  var iconColor$ = dart.privateName(gbutton, "GButton.iconColor");
  var rippleColor$ = dart.privateName(gbutton, "GButton.rippleColor");
  var hoverColor$ = dart.privateName(gbutton, "GButton.hoverColor");
  var iconActiveColor$ = dart.privateName(gbutton, "GButton.iconActiveColor");
  var textColor$ = dart.privateName(gbutton, "GButton.textColor");
  var padding$ = dart.privateName(gbutton, "GButton.padding");
  var margin$ = dart.privateName(gbutton, "GButton.margin");
  var textStyle$ = dart.privateName(gbutton, "GButton.textStyle");
  var iconSize$ = dart.privateName(gbutton, "GButton.iconSize");
  var onPressed$ = dart.privateName(gbutton, "GButton.onPressed");
  var text$ = dart.privateName(gbutton, "GButton.text");
  var icon$ = dart.privateName(gbutton, "GButton.icon");
  var backgroundColor$ = dart.privateName(gbutton, "GButton.backgroundColor");
  var duration$ = dart.privateName(gbutton, "GButton.duration");
  var curve$ = dart.privateName(gbutton, "GButton.curve");
  var backgroundGradient$ = dart.privateName(gbutton, "GButton.backgroundGradient");
  var leading$ = dart.privateName(gbutton, "GButton.leading");
  var borderRadius$ = dart.privateName(gbutton, "GButton.borderRadius");
  var border$ = dart.privateName(gbutton, "GButton.border");
  var activeBorder$ = dart.privateName(gbutton, "GButton.activeBorder");
  var shadow$ = dart.privateName(gbutton, "GButton.shadow");
  var semanticLabel$ = dart.privateName(gbutton, "GButton.semanticLabel");
  gbutton.GButton = class GButton extends framework.StatefulWidget {
    get active() {
      return this[active$];
    }
    set active(value) {
      super.active = value;
    }
    get debug() {
      return this[debug$];
    }
    set debug(value) {
      super.debug = value;
    }
    get haptic() {
      return this[haptic$];
    }
    set haptic(value) {
      super.haptic = value;
    }
    get gap() {
      return this[gap$];
    }
    set gap(value) {
      super.gap = value;
    }
    get iconColor() {
      return this[iconColor$];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get rippleColor() {
      return this[rippleColor$];
    }
    set rippleColor(value) {
      super.rippleColor = value;
    }
    get hoverColor() {
      return this[hoverColor$];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get iconActiveColor() {
      return this[iconActiveColor$];
    }
    set iconActiveColor(value) {
      super.iconActiveColor = value;
    }
    get textColor() {
      return this[textColor$];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get iconSize() {
      return this[iconSize$];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get onPressed() {
      return this[onPressed$];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      super.icon = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get curve() {
      return this[curve$];
    }
    set curve(value) {
      super.curve = value;
    }
    get backgroundGradient() {
      return this[backgroundGradient$];
    }
    set backgroundGradient(value) {
      super.backgroundGradient = value;
    }
    get leading() {
      return this[leading$];
    }
    set leading(value) {
      super.leading = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get activeBorder() {
      return this[activeBorder$];
    }
    set activeBorder(value) {
      super.activeBorder = value;
    }
    get shadow() {
      return this[shadow$];
    }
    set shadow(value) {
      super.shadow = value;
    }
    get semanticLabel() {
      return this[semanticLabel$];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    createState() {
      return new gbutton._GButtonState.new();
    }
  };
  (gbutton.GButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let active = opts && 'active' in opts ? opts.active : null;
    let haptic = opts && 'haptic' in opts ? opts.haptic : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    if (icon == null) dart.nullFailed(I[0], 39, 19, "icon");
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let rippleColor = opts && 'rippleColor' in opts ? opts.rippleColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let iconActiveColor = opts && 'iconActiveColor' in opts ? opts.iconActiveColor : null;
    let text = opts && 'text' in opts ? opts.text : "";
    if (text == null) dart.nullFailed(I[0], 44, 10, "text");
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let debug = opts && 'debug' in opts ? opts.debug : null;
    let gap = opts && 'gap' in opts ? opts.gap : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let activeBorder = opts && 'activeBorder' in opts ? opts.activeBorder : null;
    let shadow = opts && 'shadow' in opts ? opts.shadow : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[active$] = active;
    this[haptic$] = haptic;
    this[backgroundColor$] = backgroundColor;
    this[icon$] = icon;
    this[iconColor$] = iconColor;
    this[rippleColor$] = rippleColor;
    this[hoverColor$] = hoverColor;
    this[iconActiveColor$] = iconActiveColor;
    this[text$] = text;
    this[textColor$] = textColor;
    this[padding$] = padding;
    this[margin$] = margin;
    this[duration$] = duration;
    this[debug$] = debug;
    this[gap$] = gap;
    this[curve$] = curve;
    this[textStyle$] = textStyle;
    this[iconSize$] = iconSize;
    this[leading$] = leading;
    this[onPressed$] = onPressed;
    this[backgroundGradient$] = backgroundGradient;
    this[borderRadius$] = borderRadius;
    this[border$] = border;
    this[activeBorder$] = activeBorder;
    this[shadow$] = shadow;
    this[semanticLabel$] = semanticLabel;
    gbutton.GButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gbutton.GButton.prototype;
  dart.addTypeTests(gbutton.GButton);
  dart.addTypeCaches(gbutton.GButton);
  dart.setMethodSignature(gbutton.GButton, () => ({
    __proto__: dart.getMethods(gbutton.GButton.__proto__),
    createState: dart.fnType(gbutton._GButtonState, [])
  }));
  dart.setLibraryUri(gbutton.GButton, I[1]);
  dart.setFieldSignature(gbutton.GButton, () => ({
    __proto__: dart.getFields(gbutton.GButton.__proto__),
    active: dart.finalFieldType(dart.nullable(core.bool)),
    debug: dart.finalFieldType(dart.nullable(core.bool)),
    haptic: dart.finalFieldType(dart.nullable(core.bool)),
    gap: dart.finalFieldType(dart.nullable(core.double)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    rippleColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconActiveColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    iconSize: dart.finalFieldType(dart.nullable(core.double)),
    onPressed: dart.finalFieldType(dart.nullable(core.Function)),
    text: dart.finalFieldType(core.String),
    icon: dart.finalFieldType(icon_data.IconData),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    duration: dart.finalFieldType(dart.nullable(core.Duration)),
    curve: dart.finalFieldType(dart.nullable(curves.Curve)),
    backgroundGradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    border: dart.finalFieldType(dart.nullable(box_border.Border)),
    activeBorder: dart.finalFieldType(dart.nullable(box_border.Border)),
    shadow: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String))
  }));
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  gbutton._GButtonState = class _GButtonState extends framework.State$(gbutton.GButton) {
    build(context) {
      let t0, t0$;
      if (context == null) dart.nullFailed(I[0], 70, 29, "context");
      return new basic.Semantics.new({label: (t0 = this.widget.semanticLabel, t0 == null ? this.widget.text : t0), child: new button.Button.new({borderRadius: this.widget.borderRadius, border: this.widget.border, activeBorder: this.widget.activeBorder, shadow: this.widget.shadow, debug: this.widget.debug, duration: this.widget.duration, iconSize: this.widget.iconSize, active: this.widget.active, onPressed: dart.fn(() => {
            let t0;
            if (dart.nullCheck(this.widget.haptic)) haptic_feedback.HapticFeedback.selectionClick();
            t0 = this.widget.onPressed;
            t0 == null ? null : dart.dcall(t0, []);
          }, T.VoidTovoid()), padding: this.widget.padding, margin: this.widget.margin, gap: this.widget.gap, color: this.widget.backgroundColor, rippleColor: this.widget.rippleColor, hoverColor: this.widget.hoverColor, gradient: this.widget.backgroundGradient, curve: this.widget.curve, leading: this.widget.leading, iconActiveColor: this.widget.iconActiveColor, iconColor: this.widget.iconColor, icon: this.widget.icon, text: new text.Text.new(this.widget.text, {style: (t0$ = this.widget.textStyle, t0$ == null ? new text_style.TextStyle.new({fontWeight: ui.FontWeight.w600, color: this.widget.textColor}) : t0$), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4}), $creationLocationd_0dea112b090073317d4: C[28] || CT.C28});
    }
  };
  (gbutton._GButtonState.new = function() {
    gbutton._GButtonState.__proto__.new.call(this);
    ;
  }).prototype = gbutton._GButtonState.prototype;
  dart.addTypeTests(gbutton._GButtonState);
  dart.addTypeCaches(gbutton._GButtonState);
  dart.setMethodSignature(gbutton._GButtonState, () => ({
    __proto__: dart.getMethods(gbutton._GButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(gbutton._GButtonState, I[1]);
  dart.trackLibraries("packages/google_nav_bar/src/gbutton.dart", {
    "package:google_nav_bar/src/gbutton.dart": gbutton
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["gbutton.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMc;;;;;;IACA;;;;;;IACA;;;;;;IACE;;;;;;IACD;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACa;;;;;;IACA;;;;;;IACT;;;;;;IACH;;;;;;IACE;;;;;;IACH;;;;;;IACE;;;;;;IACF;;;;;;IACG;;;;;;IACH;;;;;;IACG;;;;;;IACF;;;;;;IACM;;;;;;IACN;;;;;;IACA;;;;;;IACS;;;;;;IACT;;;;;;;AAiCiB;IAAe;;;QA9BvC;QACA;QACA;QACA;QACS;;QACT;QACA;QACA;QACA;QACA;;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAzBA;IACA;IACA;IACS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF,mDAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAQM;;;AACxB,YAAO,kCACuB,KAArB,AAAO,2BAAA,aAAiB,AAAO,+BAC/B,qCACS,AAAO,kCACb,AAAO,kCACD,AAAO,kCACb,AAAO,2BACR,AAAO,6BACJ,AAAO,gCACP,AAAO,8BACT,AAAO,+BACJ;;AACT,gBAAiB,eAAb,AAAO,qBAAwB,AAAgB;AAC3B,iBAAxB,AAAO;yBAAA,OAAW;uCAEX,AAAO,6BACR,AAAO,yBACV,AAAO,wBACL,AAAO,0CACD,AAAO,qCACR,AAAO,kCACT,AAAO,uCACV,AAAO,4BACL,AAAO,sCACC,AAAO,wCACb,AAAO,6BACZ,AAAO,wBACP,kBACJ,AAAO,2BACiB,MAAjB,AAAO,uBAAA,cACV,0CACyB,2BAChB,AAAO;IAK5B;;;;;EACF","file":"../../../../../../../../packages/google_nav_bar/src/gbutton.dart.lib.js"}');
  // Exports:
  return {
    src__gbutton: gbutton
  };
}));

//# sourceMappingURL=gbutton.dart.lib.js.map
