define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/google_nav_bar/src/gbutton.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/painting/border_radius.dart'], (function load__packages__google_nav_bar__src__gnav_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__google_nav_bar__src__gbutton$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__painting__border_radius$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const gbutton = packages__google_nav_bar__src__gbutton$46dart.src__gbutton;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  var gnav = Object.create(dart.library);
  var $indexOf = dartx.indexOf;
  var $map = dartx.map;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    GButtonToGButton: () => (T.GButtonToGButton = dart.constFn(dart.fnType(gbutton.GButton, [gbutton.GButton])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 25,
        [EdgeInsets_right]: 25,
        [EdgeInsets_top]: 25,
        [EdgeInsets_left]: 25
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 0.19,
        [Cubic_c]: 0.675,
        [Cubic_b]: 0.055,
        [Cubic_a]: 0.55
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [_name]: "MainAxisAlignment.spaceBetween",
        index: 3
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 23,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "border",
        [_Location_column]: 23,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "activeBorder",
        [_Location_column]: 23,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadow",
        [_Location_column]: 23,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 23,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debug",
        [_Location_column]: 23,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 23,
        [_Location_line]: 98,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "active",
        [_Location_column]: 23,
        [_Location_line]: 99,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gap",
        [_Location_column]: 23,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconActiveColor",
        [_Location_column]: 23,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconColor",
        [_Location_column]: 23,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconSize",
        [_Location_column]: 23,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textColor",
        [_Location_column]: 23,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rippleColor",
        [_Location_column]: 23,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 23,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 23,
        [_Location_line]: 107,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 23,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 23,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 23,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "haptic",
        [_Location_column]: 23,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leading",
        [_Location_column]: 23,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 23,
        [_Location_line]: 113,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundGradient",
        [_Location_column]: 23,
        [_Location_line]: 114,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 23,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 23,
        [_Location_line]: 118,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 23,
        [_Location_line]: 119,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.constList([C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27, C[28] || CT.C28, C[29] || CT.C29, C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33], T._LocationL());
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 88,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gnav.dart"
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 13,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.constList([C[36] || CT.C36, C[37] || CT.C37], T._LocationL());
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[35] || CT.C35,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 85,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gnav.dart"
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 84,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 85,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.constList([C[40] || CT.C40, C[41] || CT.C41], T._LocationL());
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[39] || CT.C39,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 83,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gnav.dart"
      });
    }
  }, false);
  var C = Array(42).fill(void 0);
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/google_nav_bar-5.0.5/lib/src/gnav.dart",
    "package:google_nav_bar/src/gnav.dart"
  ];
  var tabs$ = dart.privateName(gnav, "GNav.tabs");
  var selectedIndex$ = dart.privateName(gnav, "GNav.selectedIndex");
  var onTabChange$ = dart.privateName(gnav, "GNav.onTabChange");
  var gap$ = dart.privateName(gnav, "GNav.gap");
  var tabBorderRadius$ = dart.privateName(gnav, "GNav.tabBorderRadius");
  var iconSize$ = dart.privateName(gnav, "GNav.iconSize");
  var activeColor$ = dart.privateName(gnav, "GNav.activeColor");
  var backgroundColor$ = dart.privateName(gnav, "GNav.backgroundColor");
  var tabBackgroundColor$ = dart.privateName(gnav, "GNav.tabBackgroundColor");
  var color$ = dart.privateName(gnav, "GNav.color");
  var rippleColor$ = dart.privateName(gnav, "GNav.rippleColor");
  var hoverColor$ = dart.privateName(gnav, "GNav.hoverColor");
  var padding$ = dart.privateName(gnav, "GNav.padding");
  var tabMargin$ = dart.privateName(gnav, "GNav.tabMargin");
  var textStyle$ = dart.privateName(gnav, "GNav.textStyle");
  var duration$ = dart.privateName(gnav, "GNav.duration");
  var curve$ = dart.privateName(gnav, "GNav.curve");
  var debug$ = dart.privateName(gnav, "GNav.debug");
  var haptic$ = dart.privateName(gnav, "GNav.haptic");
  var tabBorder$ = dart.privateName(gnav, "GNav.tabBorder");
  var tabActiveBorder$ = dart.privateName(gnav, "GNav.tabActiveBorder");
  var tabShadow$ = dart.privateName(gnav, "GNav.tabShadow");
  var tabBackgroundGradient$ = dart.privateName(gnav, "GNav.tabBackgroundGradient");
  var mainAxisAlignment$ = dart.privateName(gnav, "GNav.mainAxisAlignment");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Color_value = dart.privateName(ui, "Color.value");
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _name = dart.privateName(flex, "_name");
  gnav.GNav = class GNav extends framework.StatefulWidget {
    get tabs() {
      return this[tabs$];
    }
    set tabs(value) {
      super.tabs = value;
    }
    get selectedIndex() {
      return this[selectedIndex$];
    }
    set selectedIndex(value) {
      super.selectedIndex = value;
    }
    get onTabChange() {
      return this[onTabChange$];
    }
    set onTabChange(value) {
      super.onTabChange = value;
    }
    get gap() {
      return this[gap$];
    }
    set gap(value) {
      super.gap = value;
    }
    get tabBorderRadius() {
      return this[tabBorderRadius$];
    }
    set tabBorderRadius(value) {
      super.tabBorderRadius = value;
    }
    get iconSize() {
      return this[iconSize$];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get activeColor() {
      return this[activeColor$];
    }
    set activeColor(value) {
      super.activeColor = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get tabBackgroundColor() {
      return this[tabBackgroundColor$];
    }
    set tabBackgroundColor(value) {
      super.tabBackgroundColor = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get rippleColor() {
      return this[rippleColor$];
    }
    set rippleColor(value) {
      super.rippleColor = value;
    }
    get hoverColor() {
      return this[hoverColor$];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get tabMargin() {
      return this[tabMargin$];
    }
    set tabMargin(value) {
      super.tabMargin = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get curve() {
      return this[curve$];
    }
    set curve(value) {
      super.curve = value;
    }
    get debug() {
      return this[debug$];
    }
    set debug(value) {
      super.debug = value;
    }
    get haptic() {
      return this[haptic$];
    }
    set haptic(value) {
      super.haptic = value;
    }
    get tabBorder() {
      return this[tabBorder$];
    }
    set tabBorder(value) {
      super.tabBorder = value;
    }
    get tabActiveBorder() {
      return this[tabActiveBorder$];
    }
    set tabActiveBorder(value) {
      super.tabActiveBorder = value;
    }
    get tabShadow() {
      return this[tabShadow$];
    }
    set tabShadow(value) {
      super.tabShadow = value;
    }
    get tabBackgroundGradient() {
      return this[tabBackgroundGradient$];
    }
    set tabBackgroundGradient(value) {
      super.tabBackgroundGradient = value;
    }
    get mainAxisAlignment() {
      return this[mainAxisAlignment$];
    }
    set mainAxisAlignment(value) {
      super.mainAxisAlignment = value;
    }
    createState() {
      return new gnav._GNavState.new();
    }
  };
  (gnav.GNav.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tabs = opts && 'tabs' in opts ? opts.tabs : null;
    if (tabs == null) dart.nullFailed(I[0], 8, 19, "tabs");
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : 0;
    if (selectedIndex == null) dart.nullFailed(I[0], 9, 10, "selectedIndex");
    let onTabChange = opts && 'onTabChange' in opts ? opts.onTabChange : null;
    let gap = opts && 'gap' in opts ? opts.gap : 0;
    if (gap == null) dart.nullFailed(I[0], 11, 10, "gap");
    let padding = opts && 'padding' in opts ? opts.padding : C[0] || CT.C0;
    if (padding == null) dart.nullFailed(I[0], 12, 10, "padding");
    let activeColor = opts && 'activeColor' in opts ? opts.activeColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let rippleColor = opts && 'rippleColor' in opts ? opts.rippleColor : C[1] || CT.C1;
    if (rippleColor == null) dart.nullFailed(I[0], 15, 10, "rippleColor");
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : C[1] || CT.C1;
    if (hoverColor == null) dart.nullFailed(I[0], 16, 10, "hoverColor");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[1] || CT.C1;
    if (backgroundColor == null) dart.nullFailed(I[0], 17, 10, "backgroundColor");
    let tabBackgroundColor = opts && 'tabBackgroundColor' in opts ? opts.tabBackgroundColor : C[1] || CT.C1;
    if (tabBackgroundColor == null) dart.nullFailed(I[0], 18, 10, "tabBackgroundColor");
    let tabBorderRadius = opts && 'tabBorderRadius' in opts ? opts.tabBorderRadius : 100;
    if (tabBorderRadius == null) dart.nullFailed(I[0], 19, 10, "tabBorderRadius");
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let curve = opts && 'curve' in opts ? opts.curve : C[2] || CT.C2;
    if (curve == null) dart.nullFailed(I[0], 22, 10, "curve");
    let tabMargin = opts && 'tabMargin' in opts ? opts.tabMargin : C[3] || CT.C3;
    if (tabMargin == null) dart.nullFailed(I[0], 23, 10, "tabMargin");
    let debug = opts && 'debug' in opts ? opts.debug : false;
    if (debug == null) dart.nullFailed(I[0], 24, 10, "debug");
    let duration = opts && 'duration' in opts ? opts.duration : C[4] || CT.C4;
    if (duration == null) dart.nullFailed(I[0], 25, 10, "duration");
    let tabBorder = opts && 'tabBorder' in opts ? opts.tabBorder : null;
    let tabActiveBorder = opts && 'tabActiveBorder' in opts ? opts.tabActiveBorder : null;
    let tabShadow = opts && 'tabShadow' in opts ? opts.tabShadow : null;
    let haptic = opts && 'haptic' in opts ? opts.haptic : true;
    if (haptic == null) dart.nullFailed(I[0], 29, 10, "haptic");
    let tabBackgroundGradient = opts && 'tabBackgroundGradient' in opts ? opts.tabBackgroundGradient : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C[5] || CT.C5;
    if (mainAxisAlignment == null) dart.nullFailed(I[0], 31, 10, "mainAxisAlignment");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[tabs$] = tabs;
    this[selectedIndex$] = selectedIndex;
    this[onTabChange$] = onTabChange;
    this[gap$] = gap;
    this[padding$] = padding;
    this[activeColor$] = activeColor;
    this[color$] = color;
    this[rippleColor$] = rippleColor;
    this[hoverColor$] = hoverColor;
    this[backgroundColor$] = backgroundColor;
    this[tabBackgroundColor$] = tabBackgroundColor;
    this[tabBorderRadius$] = tabBorderRadius;
    this[iconSize$] = iconSize;
    this[textStyle$] = textStyle;
    this[curve$] = curve;
    this[tabMargin$] = tabMargin;
    this[debug$] = debug;
    this[duration$] = duration;
    this[tabBorder$] = tabBorder;
    this[tabActiveBorder$] = tabActiveBorder;
    this[tabShadow$] = tabShadow;
    this[haptic$] = haptic;
    this[tabBackgroundGradient$] = tabBackgroundGradient;
    this[mainAxisAlignment$] = mainAxisAlignment;
    gnav.GNav.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gnav.GNav.prototype;
  dart.addTypeTests(gnav.GNav);
  dart.addTypeCaches(gnav.GNav);
  dart.setMethodSignature(gnav.GNav, () => ({
    __proto__: dart.getMethods(gnav.GNav.__proto__),
    createState: dart.fnType(gnav._GNavState, [])
  }));
  dart.setLibraryUri(gnav.GNav, I[1]);
  dart.setFieldSignature(gnav.GNav, () => ({
    __proto__: dart.getFields(gnav.GNav.__proto__),
    tabs: dart.finalFieldType(core.List$(gbutton.GButton)),
    selectedIndex: dart.finalFieldType(core.int),
    onTabChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    gap: dart.finalFieldType(core.double),
    tabBorderRadius: dart.finalFieldType(core.double),
    iconSize: dart.finalFieldType(dart.nullable(core.double)),
    activeColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(ui.Color),
    tabBackgroundColor: dart.finalFieldType(ui.Color),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    rippleColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    tabMargin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    duration: dart.finalFieldType(core.Duration),
    curve: dart.finalFieldType(curves.Curve),
    debug: dart.finalFieldType(core.bool),
    haptic: dart.finalFieldType(core.bool),
    tabBorder: dart.finalFieldType(dart.nullable(box_border.Border)),
    tabActiveBorder: dart.finalFieldType(dart.nullable(box_border.Border)),
    tabShadow: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
    tabBackgroundGradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
    mainAxisAlignment: dart.finalFieldType(flex.MainAxisAlignment)
  }));
  var ___GNavState_selectedIndex = dart.privateName(gnav, "_#_GNavState#selectedIndex");
  var ___GNavState_selectedIndex_isSet = dart.privateName(gnav, "_#_GNavState#selectedIndex#isSet");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  gnav._GNavState = class _GNavState extends framework.State$(gnav.GNav) {
    get selectedIndex() {
      let t0;
      return dart.test(this[___GNavState_selectedIndex_isSet]) ? (t0 = this[___GNavState_selectedIndex], t0) : dart.throw(new _internal.LateError.fieldNI("selectedIndex"));
    }
    set selectedIndex(t0) {
      if (t0 == null) dart.nullFailed(I[0], 64, 12, "null");
      this[___GNavState_selectedIndex_isSet] = true;
      this[___GNavState_selectedIndex] = t0;
    }
    initState() {
      super.initState();
      this.selectedIndex = this.widget.selectedIndex;
    }
    didUpdateWidget(oldWidget) {
      gnav.GNav.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 74, 29, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.selectedIndex != oldWidget.selectedIndex) {
        this.selectedIndex = this.widget.selectedIndex;
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 82, 29, "context");
      return new container.Container.new({color: this.widget.backgroundColor, child: new basic.Row.new({mainAxisAlignment: this.widget.mainAxisAlignment, children: this.widget.tabs[$map](gbutton.GButton, dart.fn(t => {
            let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6, t1$7, t1$8, t1$9, t1$10, t1$11, t1$12, t1$13;
            if (t == null) dart.nullFailed(I[0], 88, 23, "t");
            return new gbutton.GButton.new({key: t.key, border: (t1 = t.border, t1 == null ? this.widget.tabBorder : t1), activeBorder: (t1$ = t.activeBorder, t1$ == null ? this.widget.tabActiveBorder : t1$), shadow: (t1$0 = t.shadow, t1$0 == null ? this.widget.tabShadow : t1$0), borderRadius: (t1$1 = t.borderRadius, t1$1 == null ? new border_radius.BorderRadius.all(new ui.Radius.circular(this.widget.tabBorderRadius)) : t1$1), debug: this.widget.debug, margin: (t1$2 = t.margin, t1$2 == null ? this.widget.tabMargin : t1$2), active: this.selectedIndex == this.widget.tabs[$indexOf](t), gap: (t1$3 = t.gap, t1$3 == null ? this.widget.gap : t1$3), iconActiveColor: (t1$4 = t.iconActiveColor, t1$4 == null ? this.widget.activeColor : t1$4), iconColor: (t1$5 = t.iconColor, t1$5 == null ? this.widget.color : t1$5), iconSize: (t1$6 = t.iconSize, t1$6 == null ? this.widget.iconSize : t1$6), textColor: (t1$7 = t.textColor, t1$7 == null ? this.widget.activeColor : t1$7), rippleColor: (t1$8 = t.rippleColor, t1$8 == null ? this.widget.rippleColor : t1$8), hoverColor: (t1$9 = t.hoverColor, t1$9 == null ? this.widget.hoverColor : t1$9), padding: (t1$10 = t.padding, t1$10 == null ? this.widget.padding : t1$10), textStyle: (t1$11 = t.textStyle, t1$11 == null ? this.widget.textStyle : t1$11), text: t.text, icon: t.icon, haptic: this.widget.haptic, leading: t.leading, curve: this.widget.curve, backgroundGradient: (t1$12 = t.backgroundGradient, t1$12 == null ? this.widget.tabBackgroundGradient : t1$12), backgroundColor: (t1$13 = t.backgroundColor, t1$13 == null ? this.widget.tabBackgroundColor : t1$13), duration: this.widget.duration, onPressed: dart.fn(() => {
                let t1, t1$;
                if (!dart.test(this.clickable)) return;
                this.setState(dart.fn(() => {
                  this.selectedIndex = this.widget.tabs[$indexOf](t);
                  this.clickable = false;
                }, T.VoidTovoid()));
                t1 = t.onPressed;
                t1 == null ? null : dart.dcall(t1, []);
                t1$ = this.widget.onTabChange;
                t1$ == null ? null : t1$(this.selectedIndex);
                T.FutureOfNull().delayed(this.widget.duration, dart.fn(() => {
                  this.setState(dart.fn(() => {
                    this.clickable = true;
                  }, T.VoidTovoid()));
                }, T.VoidToNull()));
              }, T.VoidToNull()), $creationLocationd_0dea112b090073317d4: C[6] || CT.C6});
          }, T.GButtonToGButton()))[$toList](), $creationLocationd_0dea112b090073317d4: C[34] || CT.C34}), $creationLocationd_0dea112b090073317d4: C[38] || CT.C38});
    }
  };
  (gnav._GNavState.new = function() {
    this[___GNavState_selectedIndex] = null;
    this[___GNavState_selectedIndex_isSet] = false;
    this.clickable = true;
    gnav._GNavState.__proto__.new.call(this);
    ;
  }).prototype = gnav._GNavState.prototype;
  dart.addTypeTests(gnav._GNavState);
  dart.addTypeCaches(gnav._GNavState);
  dart.setMethodSignature(gnav._GNavState, () => ({
    __proto__: dart.getMethods(gnav._GNavState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(gnav._GNavState, () => ({
    __proto__: dart.getGetters(gnav._GNavState.__proto__),
    selectedIndex: core.int
  }));
  dart.setSetterSignature(gnav._GNavState, () => ({
    __proto__: dart.getSetters(gnav._GNavState.__proto__),
    selectedIndex: core.int
  }));
  dart.setLibraryUri(gnav._GNavState, I[1]);
  dart.setFieldSignature(gnav._GNavState, () => ({
    __proto__: dart.getFields(gnav._GNavState.__proto__),
    [___GNavState_selectedIndex]: dart.fieldType(dart.nullable(core.int)),
    [___GNavState_selectedIndex_isSet]: dart.fieldType(core.bool),
    clickable: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/google_nav_bar/src/gnav.dart", {
    "package:google_nav_bar/src/gnav.dart": gnav
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["gnav.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCsB;;;;;;IACV;;;;;;IACe;;;;;;IACZ;;;;;;IACA;;;;;;IACC;;;;;;IACD;;;;;;IACD;;;;;;IACA;;;;;;IACC;;;;;;IACD;;;;;;IACA;;;;;;IACa;;;;;;IACA;;;;;;IACR;;;;;;IACF;;;;;;IACH;;;;;;IACD;;;;;;IACA;;;;;;IACG;;;;;;IACA;;;;;;IACS;;;;;;IACP;;;;;;IACQ;;;;;;;AAGI;IAAY;;;QArDjC;QACS;;QACT;;QACA;QACA;;QACA;;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;QACA;QACA;QACA;;QACA;QACA;;;IAvBS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF,6CAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCX;IAAa;;;AAAb;;IAAa;;AAKH,MAAX;AAC8B,MAApC,qBAAgB,AAAO;IACzB;;mBAG0B;;AACQ,MAA1B,sBAAgB,SAAS;AAC/B,UAAI,AAAO,AAAc,6BAAG,AAAU,SAAD;AACC,QAApC,qBAAgB,AAAO;;IAE3B;;UAG0B;AACxB,YAAO,qCACI,AAAO,oCACP,sCACgB,AAAO,yCAChB,AAAO,AACZ,AAiDA,wCAjDI,QAAC;;;AAAM,iDACD,AAAE,CAAD,eACW,KAAT,AAAE,CAAD,SAAC,aAAU,AAAO,4CACE,MAAf,AAAE,CAAD,eAAC,cAAgB,AAAO,6CACtB,OAAT,AAAE,CAAD,SAAC,eAAU,AAAO,8CACE,OAAf,AAAE,CAAD,eAAC,eACC,mCACJ,uBAAS,AAAO,8CAEtB,AAAO,4BACG,OAAT,AAAE,CAAD,SAAC,eAAU,AAAO,uCACnB,AAAc,sBAAG,AAAO,AAAK,2BAAQ,CAAC,SACnC,OAAN,AAAE,CAAD,MAAC,eAAO,AAAO,2CACc,OAAlB,AAAE,CAAD,kBAAC,eAAmB,AAAO,6CACtB,OAAZ,AAAE,CAAD,YAAC,eAAa,AAAO,sCACZ,OAAX,AAAE,CAAD,WAAC,eAAY,AAAO,0CACR,OAAZ,AAAE,CAAD,YAAC,eAAa,AAAO,+CACN,OAAd,AAAE,CAAD,cAAC,eAAe,AAAO,8CACZ,OAAb,AAAE,CAAD,aAAC,eAAc,AAAO,0CAChB,QAAV,AAAE,CAAD,UAAC,gBAAW,AAAO,0CACN,QAAZ,AAAE,CAAD,YAAC,gBAAa,AAAO,sCAC3B,AAAE,CAAD,aACD,AAAE,CAAD,eACC,AAAO,6BACN,AAAE,CAAD,iBACH,AAAO,wCAEW,QAArB,AAAE,CAAD,qBAAC,gBAAsB,AAAO,8DAEb,QAAlB,AAAE,CAAD,kBAAC,gBAAmB,AAAO,mDACtB,AAAO,iCACN;;AACT,+BAAK,iBAAW;AAId,gBAHF,cAAS;AAC+B,kBAAtC,qBAAgB,AAAO,AAAK,2BAAQ,CAAC;AACpB,kBAAjB,iBAAY;;AAGK,qBAAnB,AAAE,CAAD;6BAAC,OAAW;AAE0B,sBAAvC,AAAO;8BAAA,OAAa,IAAK;AAMvB,gBAJK,yBAAQ,AAAO,sBAAU;AAG5B,kBAFF,cAAS;AACS,oBAAhB,iBAAY;;;;;IAMtC;;;uCA1ES;;IACJ,iBAAY;;;EA0EnB","file":"../../../../../../../../packages/google_nav_bar/src/gnav.dart.lib.js"}');
  // Exports:
  return {
    src__gnav: gnav
  };
}));

//# sourceMappingURL=gnav.dart.lib.js.map
